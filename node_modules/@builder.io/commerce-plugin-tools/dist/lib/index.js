"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = require("@builder.io/react");
var ResourcesPicker_1 = require("./editors/ResourcesPicker");
var ResourcesList_1 = require("./editors/ResourcesList");
var app_context_1 = require("@builder.io/app-context");
var react_2 = require("react");
var on_editor_load_1 = require("./actions/on-editor-load");
var error_boundary_1 = require("./components/error-boundary");
var capitalize_1 = require("lodash/capitalize");
var pluralize_1 = require("pluralize");
exports.registerCommercePlugin = function (config, apiOperationsFromSettings) { return __awaiter(void 0, void 0, void 0, function () {
    var registerEditors, onSave, savedSettings;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                registerEditors = function () { return __awaiter(void 0, void 0, void 0, function () {
                    var apiOperations, resources;
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0: return [4 /*yield*/, apiOperationsFromSettings(app_context_1.default.user.organization.value.settings.plugins.get(config.id))];
                            case 1:
                                apiOperations = _a.sent();
                                resources = Object.keys(apiOperations);
                                resources.forEach(function (resourceName) {
                                    var contextProps = {
                                        resourceName: resourceName,
                                        pluginId: config.id,
                                        plulginName: config.name,
                                        api: apiOperations,
                                    };
                                    react_1.Builder.register('editor.onLoad', on_editor_load_1.onEditorLoad(config, apiOperations, resourceName));
                                    var resourcePicker = apiOperations[resourceName].resourcePicker;
                                    react_1.Builder.registerEditor({
                                        name: "" + config.name + capitalize_1.default(resourceName),
                                        isDataResource: true,
                                        pluginId: config.id,
                                        component: function (props) { return (react_2.default.createElement(error_boundary_1.ErrorBoundary, null,
                                            react_2.default.createElement(ResourcesPicker_1.ResourcesPickerButton, __assign({ resourcePicker: resourcePicker }, props, contextProps)))); },
                                    });
                                    if (!config.noPreviewTypes) {
                                        react_1.Builder.registerEditor({
                                            name: "" + config.name + capitalize_1.default(resourceName) + "Preview",
                                            component: function (props) { return (react_2.default.createElement(error_boundary_1.ErrorBoundary, null,
                                                react_2.default.createElement(ResourcesPicker_1.ResourcesPickerButton, __assign({ resourcePicker: resourcePicker }, props, contextProps, { previewType: "" + config.name + capitalize_1.default(resourceName) + "Preview", isPreview: true })))); },
                                        });
                                    }
                                    if (apiOperations[resourceName].findByHandle) {
                                        react_1.Builder.registerEditor({
                                            name: "" + config.name + capitalize_1.default(resourceName) + "Handle",
                                            component: function (props) { return (react_2.default.createElement(error_boundary_1.ErrorBoundary, null,
                                                react_2.default.createElement(ResourcesPicker_1.ResourcesPickerButton, __assign({ resourcePicker: resourcePicker }, props, contextProps, { handleOnly: true })))); },
                                        });
                                    }
                                    react_1.Builder.registerEditor({
                                        name: "" + config.name + capitalize_1.default(pluralize_1.default.plural(resourceName)) + "List",
                                        component: function (props) { return (react_2.default.createElement(error_boundary_1.ErrorBoundary, null,
                                            react_2.default.createElement(ResourcesList_1.PickResourcesListButton, __assign({ resourcePicker: resourcePicker }, props, contextProps)))); },
                                    });
                                });
                                return [2 /*return*/];
                        }
                    });
                }); };
                onSave = config.onSave;
                config.onSave = function (actions) { return __awaiter(void 0, void 0, void 0, function () {
                    return __generator(this, function (_a) {
                        switch (_a.label) {
                            case 0: return [4 /*yield*/, actions.updateSettings({ hasConnected: true })];
                            case 1:
                                _a.sent();
                                if (!onSave) return [3 /*break*/, 3];
                                return [4 /*yield*/, onSave(actions)];
                            case 2:
                                _a.sent();
                                _a.label = 3;
                            case 3:
                                registerEditors();
                                return [2 /*return*/];
                        }
                    });
                }); };
                react_1.Builder.register('plugin', __assign(__assign({}, config), { isSourcePlugin: true }));
                react_1.Builder.register('app.onLoad', function (_a) {
                    var triggerSettingsDialog = _a.triggerSettingsDialog;
                    return __awaiter(void 0, void 0, void 0, function () {
                        var pluginSettings, hasConnected;
                        var _b;
                        return __generator(this, function (_c) {
                            switch (_c.label) {
                                case 0:
                                    pluginSettings = app_context_1.default.user.organization.value.settings.plugins.get(config.id);
                                    hasConnected = (_b = pluginSettings) === null || _b === void 0 ? void 0 : _b.get('hasConnected');
                                    if (!!hasConnected) return [3 /*break*/, 2];
                                    return [4 /*yield*/, triggerSettingsDialog(config.id)];
                                case 1:
                                    _c.sent();
                                    _c.label = 2;
                                case 2: return [2 /*return*/];
                            }
                        });
                    });
                });
                savedSettings = app_context_1.default.user.organization.value.settings.plugins.get(config.id);
                if (!savedSettings) {
                    return [2 /*return*/];
                }
                return [4 /*yield*/, registerEditors()];
            case 1:
                _a.sent();
                return [2 /*return*/];
        }
    });
}); };
var ResourcesPicker_2 = require("./editors/ResourcesPicker");
exports.ResourcePreviewCell = ResourcesPicker_2.ResourcePreviewCell;
//# sourceMappingURL=index.js.map